# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P2-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
#  m: [0.67, 0.75, 768]
#  l: [1.00, 1.00, 512]
#  x: [1.00, 1.25, 512]

# YOLOv8.0 backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 3, C2fMSC, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 6, C2fMSC, [256, True]]
  - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16
  - [-1, 6, C2fMSC, [512, True]]
  - [-1, 1, SPPF, [512, 5]] # 7
  - [-1, 1, C3TR, [512, True]] # 8
# YOLOv8.0-p2 head
head:
  - [ 0, 1, DDWConv, [ 128, 9, 2, True, 4 ] ] #9
  - [ 2, 1, DDWConv, [ 256, 9, 2, True, 2 ]] #10

  - [8, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 4, 10], 1, Concat, [1]] # cat backbone P4
  - [-1, 3, C2f, [256]] # 13
  - [-1, 1, CBAM, [256, 3]]

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 2, 9], 1, Concat, [1]] # cat backbone P3
  - [-1, 3, C2f, [128]] # 17
  - [-1, 1, CBAM, [128, 3]]

  - [ -1, 1, Conv, [ 128, 3, 2 ] ]
  - [ [ -1, 14 ], 1, Concat, [ 1 ] ] # cat head P3
  - [ -1, 3, C2f, [ 256 ] ] # 21 (P3/8-small)
  - [ -1, 1, CBAM, [ 256, 3 ] ]

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 8], 1, Concat, [1]] # cat head P3
  - [-1, 3, C2f, [512]] # 25 (P3/8-small)
  - [-1, 1, CBAM, [512, 3]]

#  - [[18, 22, 26], 1, Detect, [nc]] # Detect(P2, P3, P4, P5)
  - [[18, 22, 26], 1, OBB, [nc, 1]] # OBB(P3, P4, P5)