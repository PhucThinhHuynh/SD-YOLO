# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv10 object detection model. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov10n.yaml' will call yolov10.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]

backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 3, C2fMSC, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 6, C2fMSC, [256, True]]
  - [-1, 1, SCDown, [512, 3, 2]] # 5-P4/16
  - [-1, 6, C2fMSC, [512, True]]
  - [-1, 1, SCDown, [1024, 3, 2]] # 7-P5/32
  - [-1, 3, C2fMSC, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]] # 9
  - [-1, 1, PSA, [1024]] # 10

# YOLOv10.0n head
head:
  - [ 0, 1, DWConv, [ 256, 33, 2 ] ] #11
  - [ 2, 1, Conv, [ 256 ] ] #12
  - [ 2, 1, DWConv, [ 256, 15, 2 ] ] #13
  - [ 4, 1, Conv, [ 256 ] ] #14
  - [ 4, 1, DWConv, [ 256, 7, 2 ] ] #15
  - [ 6, 1, Conv, [ 256 ] ] #16
  - [ 10, 1, Conv, [ 256 ] ] #17

  - [ -1, 1, nn.Upsample, [ None, 2, "nearest" ] ]
  - [ [ -1, 16, 15 ], 1, Fusion, [ 'bifpn' ] ] # cat backbone P4
  - [ -1, 3, C2f, [ 256 ] ] # 20

  - [ -1, 1, nn.Upsample, [ None, 2, "nearest" ] ]
  - [ [ -1, 14, 13 ], 1, Fusion, [ 'bifpn' ] ] # cat backbone P3
  - [ -1, 3, C2f, [ 256 ] ] # 23

  - [ -1, 1, nn.Upsample, [ None, 2, "nearest" ] ]
  - [ [ -1, 12, 11 ], 1, Fusion, [ 'bifpn' ] ] # cat backbone P2
  - [ -1, 3, C2f, [ 256 ] ] # 26 (P2/4-xsmall)

  - [ -1, 1, Conv, [ 256, 3, 2 ] ]
  - [ [ -1, 23, 14 ], 1, Fusion, [ 'bifpn' ] ] # cat head P3
  - [ -1, 3, C2f, [ 256 ] ] # 29 (P3/8-small)

  - [ -1, 1, Conv, [ 256, 3, 2 ] ]
  - [ [ -1, 20, 16 ], 1, Fusion, [ 'bifpn' ] ] # cat head P4
  - [ -1, 3, C2f, [ 256 ] ] # 32 (P4/16-medium)

  - [ -1, 1, SCDown, [ 256, 3, 2 ] ]
  - [ [ -1, 17 ], 1, Fusion, [ 'bifpn' ] ] # cat head P5
  - [ -1, 3, C2fCIB, [256, True, True]] # 35 (P5/32-large)

  - [[26, 29, 32, 35], 1, v10Detect, [nc]] # Detect(P3, P4, P5)
